INFO:root:PLY: PARSE DEBUG START
DEBUG:root:State  : 0
DEBUG:root:Stack  : . LexToken(PROGRAM,'program',2,1)
DEBUG:root:Action : Shift and goto state 2
DEBUG:root:State  : 2
DEBUG:root:Stack  : PROGRAM . LexToken(ID,'donpato',2,9)
DEBUG:root:Action : Shift and goto state 3
DEBUG:root:State  : 3
DEBUG:root:Stack  : PROGRAM ID . LexToken(;,';',2,16)
DEBUG:root:Action : Shift and goto state 4
DEBUG:root:State  : 4
DEBUG:root:Stack  : PROGRAM ID ; . LexToken(VAR,'var',3,18)
DEBUG:root:Action : Shift and goto state 8
DEBUG:root:State  : 8
DEBUG:root:Stack  : PROGRAM ID ; VAR . LexToken(FLOAT,'float',3,22)
DEBUG:root:Action : Shift and goto state 18
DEBUG:root:State  : 18
DEBUG:root:Stack  : PROGRAM ID ; VAR FLOAT . LexToken(:,':',3,27)
INFO:root:Action : Reduce rule [tipo -> FLOAT] with ['float'] and goto state 16
INFO:root:Result : <str @ 0x1f5be31c5f0> ('float')
DEBUG:root:State  : 16
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo . LexToken(:,':',3,27)
DEBUG:root:Action : Shift and goto state 27
DEBUG:root:State  : 27
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : . LexToken(ID,'numero',3,28)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID . LexToken([,'[',3,34)
DEBUG:root:Action : Shift and goto state 44
DEBUG:root:State  : 44
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ . LexToken(CTE_I,0,3,35)
DEBUG:root:Action : Shift and goto state 56
DEBUG:root:State  : 56
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ CTE_I . LexToken(],']',3,36)
INFO:root:Action : Reduce rule [num_var -> CTE_I] with [0] and goto state 54
INFO:root:Result : <int @ 0x7ffc2a7ed680> (0)
DEBUG:root:State  : 54
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var . LexToken(],']',3,36)
DEBUG:root:Action : Shift and goto state 84
DEBUG:root:State  : 84
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] . LexToken([,'[',3,37)
DEBUG:root:Action : Shift and goto state 102
DEBUG:root:State  : 102
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] [ . LexToken(CTE_I,0,3,38)
DEBUG:root:Action : Shift and goto state 56
DEBUG:root:State  : 56
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] [ CTE_I . LexToken(],']',3,39)
INFO:root:Action : Reduce rule [num_var -> CTE_I] with [0] and goto state 130
INFO:root:Result : <int @ 0x7ffc2a7ed680> (0)
DEBUG:root:State  : 130
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] [ num_var . LexToken(],']',3,39)
DEBUG:root:Action : Shift and goto state 172
DEBUG:root:State  : 172
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] [ num_var ] . LexToken(,,',',3,40)
INFO:root:Action : Reduce rule [dimension_1 -> [ num_var ]] with ['[',0,']'] and goto state 103
INFO:root:Result : <int @ 0x7ffc2a7ed680> (0)
DEBUG:root:State  : 103
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID [ num_var ] dimension_1 . LexToken(,,',',3,40)
INFO:root:Action : Reduce rule [dimension -> [ num_var ] dimension_1] with ['[',0,']',0] and goto state 42
INFO:root:Result : <tuple @ 0x1f5be2dfb40> ((0, 0))
DEBUG:root:State  : 42
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID dimension . LexToken(,,',',3,40)
INFO:root:Action : Reduce rule [id_completo_1 -> dimension] with [(0, 0)] and goto state 41
INFO:root:Result : <tuple @ 0x1f5be2dfb40> ((0, 0))
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : ID id_completo_1 . LexToken(,,',',3,40)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['numero',(0, 0)] and goto state 31
INFO:root:Result : <tuple @ 0x1f5be2df940> (('numero', (0, 0)))
DEBUG:root:State  : 31
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo . LexToken(,,',',3,40)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:State  : 39
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , . LexToken(ID,'mat',3,42)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID . LexToken([,'[',3,45)
DEBUG:root:Action : Shift and goto state 44
DEBUG:root:State  : 44
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ . LexToken(CTE_I,1,3,46)
DEBUG:root:Action : Shift and goto state 56
DEBUG:root:State  : 56
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ CTE_I . LexToken(],']',3,47)
INFO:root:Action : Reduce rule [num_var -> CTE_I] with [1] and goto state 54
INFO:root:Result : <int @ 0x7ffc2a7ed6a0> (1)
DEBUG:root:State  : 54
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ num_var . LexToken(],']',3,47)
DEBUG:root:Action : Shift and goto state 84
DEBUG:root:State  : 84
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ num_var ] . LexToken(,,',',3,48)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 104
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 104
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ num_var ] epsilon . LexToken(,,',',3,48)
INFO:root:Action : Reduce rule [dimension_1 -> epsilon] with [None] and goto state 103
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 103
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID [ num_var ] dimension_1 . LexToken(,,',',3,48)
INFO:root:Action : Reduce rule [dimension -> [ num_var ] dimension_1] with ['[',1,']',None] and goto state 42
INFO:root:Result : <tuple @ 0x1f5be2df880> ((1, None))
DEBUG:root:State  : 42
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID dimension . LexToken(,,',',3,48)
INFO:root:Action : Reduce rule [id_completo_1 -> dimension] with [(1, None)] and goto state 41
INFO:root:Result : <tuple @ 0x1f5be2df880> ((1, None))
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , ID id_completo_1 . LexToken(,,',',3,48)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['mat',(1, None)] and goto state 53
INFO:root:Result : <tuple @ 0x1f5be2df780> (('mat', (1, None)))
DEBUG:root:State  : 53
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo . LexToken(,,',',3,48)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:State  : 39
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , . LexToken(ID,'wat',3,50)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , ID . LexToken(,,',',3,53)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , ID epsilon . LexToken(,,',',3,53)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , ID id_completo_1 . LexToken(,,',',3,53)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['wat',None] and goto state 53
INFO:root:Result : <tuple @ 0x1f5be2df540> (('wat', None))
DEBUG:root:State  : 53
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo . LexToken(,,',',3,53)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:State  : 39
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , . LexToken(ID,'dude',3,55)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , ID . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , ID epsilon . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , ID id_completo_1 . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['dude',None] and goto state 53
INFO:root:Result : <tuple @ 0x1f5be2df4c0> (('dude', None))
DEBUG:root:State  : 53
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , id_completo . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 40
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 40
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , id_completo epsilon . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [lista_id_1 -> epsilon] with [None] and goto state 83
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 83
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo , id_completo lista_id_1 . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [lista_id_1 -> , id_completo lista_id_1] with [',',('dude', None),None] and goto state 83
INFO:root:Result : <list @ 0x1f5be33a280> ([('dude', None)])
DEBUG:root:State  : 83
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo , id_completo lista_id_1 . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [lista_id_1 -> , id_completo lista_id_1] with [',',('wat', None),<list @ 0x1f5be33a280>] and goto state 83
INFO:root:Result : <list @ 0x1f5be338ec0> ([('wat', None), ('dude', None)])
DEBUG:root:State  : 83
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo , id_completo lista_id_1 . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [lista_id_1 -> , id_completo lista_id_1] with [',',<tuple @ 0x1f5be2df780>,<list @ 0x1f5be338ec0>] and goto state 38
INFO:root:Result : <list @ 0x1f5be33a280> ([('mat', (1, None)), ('wat', None), ('du ...)
DEBUG:root:State  : 38
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : id_completo lista_id_1 . LexToken(;,';',3,59)
INFO:root:Action : Reduce rule [lista_id -> id_completo lista_id_1] with [<tuple @ 0x1f5be2df940>,<list @ 0x1f5be33a280>] and goto state 30
INFO:root:Result : <list @ 0x1f5be338ec0> ([('numero', (0, 0)), ('mat', (1, None)), ...)
DEBUG:root:State  : 30
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id . LexToken(;,';',3,59)
DEBUG:root:Action : Shift and goto state 37
DEBUG:root:State  : 37
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; . LexToken(INT,'int',4,65)
DEBUG:root:Action : Shift and goto state 17
DEBUG:root:State  : 17
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; INT . LexToken(:,':',4,68)
INFO:root:Action : Reduce rule [tipo -> INT] with ['int'] and goto state 16
INFO:root:Result : <str @ 0x1f5be31cd30> ('int')
DEBUG:root:State  : 16
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo . LexToken(:,':',4,68)
DEBUG:root:Action : Shift and goto state 27
DEBUG:root:State  : 27
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : . LexToken(ID,'data',4,70)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : ID . LexToken(,,',',4,74)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : ID epsilon . LexToken(,,',',4,74)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : ID id_completo_1 . LexToken(,,',',4,74)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['data',None] and goto state 31
INFO:root:Result : <tuple @ 0x1f5be2df440> (('data', None))
DEBUG:root:State  : 31
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo . LexToken(,,',',4,74)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:State  : 39
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , . LexToken(ID,'custom',4,76)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , ID . LexToken(,,',',4,82)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , ID epsilon . LexToken(,,',',4,82)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , ID id_completo_1 . LexToken(,,',',4,82)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['custom',None] and goto state 53
INFO:root:Result : <tuple @ 0x1f5be2df3c0> (('custom', None))
DEBUG:root:State  : 53
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo . LexToken(,,',',4,82)
DEBUG:root:Action : Shift and goto state 39
DEBUG:root:State  : 39
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , . LexToken(ID,'suma',4,84)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , ID . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , ID epsilon . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , ID id_completo_1 . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['suma',None] and goto state 53
INFO:root:Result : <tuple @ 0x1f5be2df340> (('suma', None))
DEBUG:root:State  : 53
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , id_completo . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 40
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 40
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , id_completo epsilon . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [lista_id_1 -> epsilon] with [None] and goto state 83
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 83
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo , id_completo lista_id_1 . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [lista_id_1 -> , id_completo lista_id_1] with [',',('suma', None),None] and goto state 83
INFO:root:Result : <list @ 0x1f5be33a080> ([('suma', None)])
DEBUG:root:State  : 83
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo , id_completo lista_id_1 . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [lista_id_1 -> , id_completo lista_id_1] with [',',<tuple @ 0x1f5be2df3c0>,<list @ 0x1f5be33a080>] and goto state 38
INFO:root:Result : <list @ 0x1f5be338d40> ([('custom', None), ('suma', None)])
DEBUG:root:State  : 38
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : id_completo lista_id_1 . LexToken(;,';',4,88)
INFO:root:Action : Reduce rule [lista_id -> id_completo lista_id_1] with [('data', None),<list @ 0x1f5be338d40>] and goto state 30
INFO:root:Result : <list @ 0x1f5be33a080> ([('data', None), ('custom', None), ('sum ...)
DEBUG:root:State  : 30
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id . LexToken(;,';',4,88)
DEBUG:root:Action : Shift and goto state 37
DEBUG:root:State  : 37
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; . LexToken(CHAR,'char',5,94)
DEBUG:root:Action : Shift and goto state 20
DEBUG:root:State  : 20
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; CHAR . LexToken(:,':',5,98)
INFO:root:Action : Reduce rule [tipo -> CHAR] with ['char'] and goto state 16
INFO:root:Result : <str @ 0x1f5be31ce30> ('char')
DEBUG:root:State  : 16
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo . LexToken(:,':',5,98)
DEBUG:root:Action : Shift and goto state 27
DEBUG:root:State  : 27
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : . LexToken(ID,'a',5,100)
DEBUG:root:Action : Shift and goto state 32
DEBUG:root:State  : 32
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : ID . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : ID epsilon . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : ID id_completo_1 . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['a',None] and goto state 31
INFO:root:Result : <tuple @ 0x1f5be2df2c0> (('a', None))
DEBUG:root:State  : 31
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : id_completo . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 40
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 40
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : id_completo epsilon . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [lista_id_1 -> epsilon] with [None] and goto state 38
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 38
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : id_completo lista_id_1 . LexToken(;,';',5,101)
INFO:root:Action : Reduce rule [lista_id -> id_completo lista_id_1] with [('a', None),None] and goto state 30
INFO:root:Result : <list @ 0x1f5be338d40> ([('a', None)])
DEBUG:root:State  : 30
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : lista_id . LexToken(;,';',5,101)
DEBUG:root:Action : Shift and goto state 37
DEBUG:root:State  : 37
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : lista_id ; . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 52
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 52
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : lista_id ; epsilon . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_2 -> epsilon] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 50
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; tipo : lista_id ; vars_2 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_1 -> tipo : lista_id ; vars_2] with ['char',':',[('a', None)],';',None] and goto state 51
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 51
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; vars_1 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_2 -> vars_1] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 50
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; tipo : lista_id ; vars_2 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_1 -> tipo : lista_id ; vars_2] with ['int',':',<list @ 0x1f5be33a080>,';',None] and goto state 51
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 51
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; vars_1 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_2 -> vars_1] with [None] and goto state 50
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 50
DEBUG:root:Stack  : PROGRAM ID ; VAR tipo : lista_id ; vars_2 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars_1 -> tipo : lista_id ; vars_2] with ['float',':',<list @ 0x1f5be338ec0>,';',None] and goto state 15
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 15
DEBUG:root:Stack  : PROGRAM ID ; VAR vars_1 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [vars -> VAR vars_1] with ['var',None] and goto state 6
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 6
DEBUG:root:Stack  : PROGRAM ID ; vars . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 10
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 10
DEBUG:root:Defaulted state 10: Reduce using 5
DEBUG:root:Stack  : PROGRAM ID ; vars epsilon . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [programa_2 -> epsilon] with [None] and goto state 14
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 14
DEBUG:root:Defaulted state 14: Reduce using 2
DEBUG:root:Stack  : PROGRAM ID ; vars programa_2 . LexToken(MAIN,'main',6,103)
INFO:root:Action : Reduce rule [programa_1 -> vars programa_2] with [None,None] and goto state 5
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 5
DEBUG:root:Stack  : PROGRAM ID ; programa_1 . LexToken(MAIN,'main',6,103)
DEBUG:root:Action : Shift and goto state 13
DEBUG:root:State  : 13
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN . LexToken((,'(',6,107)
DEBUG:root:Action : Shift and goto state 26
DEBUG:root:State  : 26
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( . LexToken(),')',6,108)
DEBUG:root:Action : Shift and goto state 29
DEBUG:root:State  : 29
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) . LexToken({,'{',6,110)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 36
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 36
DEBUG:root:Defaulted state 36: Reduce using 54
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) epsilon . LexToken({,'{',6,110)
INFO:root:Action : Reduce rule [main_1 -> epsilon] with [None] and goto state 34
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 34
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 . LexToken({,'{',6,110)
DEBUG:root:Action : Shift and goto state 49
DEBUG:root:State  : 49
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { . LexToken(ID,'numeroPi',7,116)
DEBUG:root:Action : Shift and goto state 73
DEBUG:root:State  : 73
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { ID . LexToken(=,'=',7,125)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { ID epsilon . LexToken(=,'=',7,125)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { ID id_completo_1 . LexToken(=,'=',7,125)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['numeroPi',None] and goto state 72
INFO:root:Result : <tuple @ 0x1f5be2df940> (('numeroPi', None))
DEBUG:root:State  : 72
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo . LexToken(=,'=',7,125)
DEBUG:root:Action : Shift and goto state 93
DEBUG:root:State  : 93
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = . LexToken(CTE_F,3.1,7,127)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = epsilon . LexToken(CTE_F,3.1,7,127)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor_1 . LexToken(CTE_F,3.1,7,127)
DEBUG:root:Action : Shift and goto state 155
DEBUG:root:State  : 155
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor_1 CTE_F . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [var_cte -> CTE_F] with [3.1] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor_1 var_cte . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor epsilon . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = factor termino_1 . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = termino . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = termino epsilon . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = termino exp_1 . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = exp . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 136
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 136
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = exp epsilon . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [expression_1 -> epsilon] with [None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = exp expression_1 . LexToken(;,';',7,130)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 107
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 107
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = expression . LexToken(;,';',7,130)
DEBUG:root:Action : Shift and goto state 133
DEBUG:root:State  : 133
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { id_completo = expression ; . LexToken(IF,'if',8,133)
INFO:root:Action : Reduce rule [assignment -> id_completo = expression ;] with [<tuple @ 0x1f5be2df940>,'=',None,';'] and goto state 64
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 64
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { assignment . LexToken(IF,'if',8,133)
INFO:root:Action : Reduce rule [statement -> assignment] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement . LexToken(IF,'if',8,133)
DEBUG:root:Action : Shift and goto state 78
DEBUG:root:State  : 78
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF . LexToken((,'(',8,136)
DEBUG:root:Action : Shift and goto state 99
DEBUG:root:State  : 99
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( . LexToken(ID,'numeroPi',8,137)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( epsilon . LexToken(ID,'numeroPi',8,137)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 . LexToken(ID,'numeroPi',8,137)
DEBUG:root:Action : Shift and goto state 158
DEBUG:root:State  : 158
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 ID . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 180
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 180
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 ID epsilon . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [var_cte_2 -> epsilon] with [None] and goto state 178
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 178
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 ID var_cte_2 . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [var_cte_1 -> ID var_cte_2] with ['numeroPi',None] and goto state 153
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 153
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 var_cte_1 . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [var_cte -> var_cte_1] with [None] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor_1 var_cte . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor epsilon . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( factor termino_1 . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( termino . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( termino epsilon . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( termino exp_1 . LexToken(<,'<',8,146)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp . LexToken(<,'<',8,146)
DEBUG:root:Action : Shift and goto state 137
DEBUG:root:State  : 137
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp < . LexToken(ID,'hi',8,148)
INFO:root:Action : Reduce rule [comparison_ops -> <] with ['<'] and goto state 135
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 135
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops . LexToken(ID,'hi',8,148)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops epsilon . LexToken(ID,'hi',8,148)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 . LexToken(ID,'hi',8,148)
DEBUG:root:Action : Shift and goto state 158
DEBUG:root:State  : 158
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 ID . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 180
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 180
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 ID epsilon . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [var_cte_2 -> epsilon] with [None] and goto state 178
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 178
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 ID var_cte_2 . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [var_cte_1 -> ID var_cte_2] with ['hi',None] and goto state 153
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 153
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 var_cte_1 . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [var_cte -> var_cte_1] with [None] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor_1 var_cte . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor epsilon . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops factor termino_1 . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops termino . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops termino epsilon . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops termino exp_1 . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 174
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 174
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp comparison_ops exp . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [expression_1 -> comparison_ops exp] with [None,None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( exp expression_1 . LexToken(),')',8,150)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 127
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 127
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression . LexToken(),')',8,150)
DEBUG:root:Action : Shift and goto state 169
DEBUG:root:State  : 169
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) . LexToken(THEN,'then',8,152)
DEBUG:root:Action : Shift and goto state 187
DEBUG:root:State  : 187
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN . LexToken({,'{',8,157)
DEBUG:root:Action : Shift and goto state 196
DEBUG:root:State  : 196
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { . LexToken(ID,'numeroPi',9,161)
DEBUG:root:Action : Shift and goto state 73
DEBUG:root:State  : 73
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { ID . LexToken(=,'=',9,170)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { ID epsilon . LexToken(=,'=',9,170)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { ID id_completo_1 . LexToken(=,'=',9,170)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['numeroPi',None] and goto state 72
INFO:root:Result : <tuple @ 0x1f5be2df940> (('numeroPi', None))
DEBUG:root:State  : 72
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo . LexToken(=,'=',9,170)
DEBUG:root:Action : Shift and goto state 93
DEBUG:root:State  : 93
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = . LexToken(CTE_F,3.14159,9,172)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = epsilon . LexToken(CTE_F,3.14159,9,172)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor_1 . LexToken(CTE_F,3.14159,9,172)
DEBUG:root:Action : Shift and goto state 155
DEBUG:root:State  : 155
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor_1 CTE_F . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [var_cte -> CTE_F] with [3.14159] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor_1 var_cte . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor epsilon . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = factor termino_1 . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = termino . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = termino epsilon . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = termino exp_1 . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = exp . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 136
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 136
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = exp epsilon . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [expression_1 -> epsilon] with [None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = exp expression_1 . LexToken(;,';',9,179)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 107
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 107
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = expression . LexToken(;,';',9,179)
DEBUG:root:Action : Shift and goto state 133
DEBUG:root:State  : 133
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { id_completo = expression ; . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [assignment -> id_completo = expression ;] with [<tuple @ 0x1f5be2df940>,'=',None,';'] and goto state 64
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 64
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { assignment . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [statement -> assignment] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { statement . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 63
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 63
DEBUG:root:Defaulted state 63: Reduce using 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { statement epsilon . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [bloque_1 -> epsilon] with [None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { statement bloque_1 . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 61
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 61
DEBUG:root:Defaulted state 61: Reduce using 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { bloque_1 . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [bloque -> bloque_1] with [None] and goto state 201
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 201
DEBUG:root:Defaulted state 201: Reduce using 56
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { bloque . LexToken(},'}',10,182)
INFO:root:Action : Reduce rule [condition_1 -> bloque] with [None] and goto state 200
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 200
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 . LexToken(},'}',10,182)
DEBUG:root:Action : Shift and goto state 208
DEBUG:root:State  : 208
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } . LexToken(ELSE,'else',11,188)
DEBUG:root:Action : Shift and goto state 213
DEBUG:root:State  : 213
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE . LexToken({,'{',12,197)
DEBUG:root:Action : Shift and goto state 219
DEBUG:root:State  : 219
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { . LexToken(ID,'print',13,201)
DEBUG:root:Action : Shift and goto state 73
DEBUG:root:State  : 73
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID . LexToken((,'(',13,206)
DEBUG:root:Action : Shift and goto state 94
DEBUG:root:State  : 94
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( . LexToken(CTE_STRING,'"Coronavirus will destroy math"',13,207)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 118
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 118
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( epsilon . LexToken(CTE_STRING,'"Coronavirus will destroy math"',13,207)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor_1 . LexToken(CTE_STRING,'"Coronavirus will destroy math"',13,207)
DEBUG:root:Action : Shift and goto state 156
DEBUG:root:State  : 156
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor_1 CTE_STRING . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [var_cte -> CTE_STRING] with [<str @ 0x1f5be292b20>] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor_1 var_cte . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor epsilon . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( factor termino_1 . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( termino . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( termino epsilon . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( termino exp_1 . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( exp . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 136
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 136
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( exp epsilon . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [expression_1 -> epsilon] with [None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( exp expression_1 . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 117
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 117
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( expression . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 162
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 162
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( expression epsilon . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [func_call_2 -> epsilon] with [None] and goto state 160
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 160
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( expression func_call_2 . LexToken(),')',13,238)
INFO:root:Action : Reduce rule [func_call_1 -> expression func_call_2] with [None,None] and goto state 116
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 116
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( func_call_1 . LexToken(),')',13,238)
DEBUG:root:Action : Shift and goto state 159
DEBUG:root:State  : 159
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( func_call_1 ) . LexToken(;,';',13,239)
DEBUG:root:Action : Shift and goto state 181
DEBUG:root:State  : 181
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { ID ( func_call_1 ) ; . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [func_call -> ID ( func_call_1 ) ;] with ['print','(',None,')',';'] and goto state 65
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 65
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { func_call . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [statement -> func_call] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { statement . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 63
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 63
DEBUG:root:Defaulted state 63: Reduce using 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { statement epsilon . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [bloque_1 -> epsilon] with [None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { statement bloque_1 . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 61
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 61
DEBUG:root:Defaulted state 61: Reduce using 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { bloque_1 . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [bloque -> bloque_1] with [None] and goto state 201
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 201
DEBUG:root:Defaulted state 201: Reduce using 56
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { bloque . LexToken(},'}',14,242)
INFO:root:Action : Reduce rule [condition_1 -> bloque] with [None] and goto state 222
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 222
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { condition_1 . LexToken(},'}',14,242)
DEBUG:root:Action : Shift and goto state 223
DEBUG:root:State  : 223
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } ELSE { condition_1 } . LexToken(IF,'if',15,248)
INFO:root:Action : Reduce rule [condition_2 -> ELSE { condition_1 }] with ['else','{',None,'}'] and goto state 212
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 212
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement IF ( expression ) THEN { condition_1 } condition_2 . LexToken(IF,'if',15,248)
INFO:root:Action : Reduce rule [condition -> IF ( expression ) THEN { condition_1 } condition_2] with ['if','(',None,')','then','{',None,'}',None] and goto state 70
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 70
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement condition . LexToken(IF,'if',15,248)
INFO:root:Action : Reduce rule [statement -> condition] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement . LexToken(IF,'if',15,248)
DEBUG:root:Action : Shift and goto state 78
DEBUG:root:State  : 78
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF . LexToken((,'(',15,251)
DEBUG:root:Action : Shift and goto state 99
DEBUG:root:State  : 99
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( . LexToken(CTE_I,3,15,252)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( epsilon . LexToken(CTE_I,3,15,252)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor_1 . LexToken(CTE_I,3,15,252)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:State  : 154
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor_1 CTE_I . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [var_cte -> CTE_I] with [3] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor_1 var_cte . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor epsilon . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( factor termino_1 . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( termino . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( termino epsilon . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( termino exp_1 . LexToken(>,'>',15,254)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp . LexToken(>,'>',15,254)
DEBUG:root:Action : Shift and goto state 138
DEBUG:root:State  : 138
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp > . LexToken(CTE_I,2,15,256)
INFO:root:Action : Reduce rule [comparison_ops -> >] with ['>'] and goto state 135
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 135
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops . LexToken(CTE_I,2,15,256)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops epsilon . LexToken(CTE_I,2,15,256)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor_1 . LexToken(CTE_I,2,15,256)
DEBUG:root:Action : Shift and goto state 154
DEBUG:root:State  : 154
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor_1 CTE_I . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [var_cte -> CTE_I] with [2] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor_1 var_cte . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor epsilon . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops factor termino_1 . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops termino . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops termino epsilon . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops termino exp_1 . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 174
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 174
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp comparison_ops exp . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [expression_1 -> comparison_ops exp] with [None,None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( exp expression_1 . LexToken(),')',15,257)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 127
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 127
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression . LexToken(),')',15,257)
DEBUG:root:Action : Shift and goto state 169
DEBUG:root:State  : 169
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) . LexToken(THEN,'then',15,259)
DEBUG:root:Action : Shift and goto state 187
DEBUG:root:State  : 187
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN . LexToken({,'{',15,264)
DEBUG:root:Action : Shift and goto state 196
DEBUG:root:State  : 196
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { . LexToken(ID,'numero',16,274)
DEBUG:root:Action : Shift and goto state 73
DEBUG:root:State  : 73
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { ID . LexToken(=,'=',16,281)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 43
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 43
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { ID epsilon . LexToken(=,'=',16,281)
INFO:root:Action : Reduce rule [id_completo_1 -> epsilon] with [None] and goto state 41
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 41
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { ID id_completo_1 . LexToken(=,'=',16,281)
INFO:root:Action : Reduce rule [id_completo -> ID id_completo_1] with ['numero',None] and goto state 72
INFO:root:Result : <tuple @ 0x1f5be2df940> (('numero', None))
DEBUG:root:State  : 72
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo . LexToken(=,'=',16,281)
DEBUG:root:Action : Shift and goto state 93
DEBUG:root:State  : 93
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = . LexToken(CTE_F,5.5,16,283)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 115
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 115
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = epsilon . LexToken(CTE_F,5.5,16,283)
INFO:root:Action : Reduce rule [factor_1 -> epsilon] with [None] and goto state 112
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 112
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor_1 . LexToken(CTE_F,5.5,16,283)
DEBUG:root:Action : Shift and goto state 155
DEBUG:root:State  : 155
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor_1 CTE_F . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [var_cte -> CTE_F] with [5.5] and goto state 152
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 152
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor_1 var_cte . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [factor -> factor_1 var_cte] with [None,None] and goto state 110
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 148
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 148
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor epsilon . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [termino_1 -> epsilon] with [None] and goto state 146
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 146
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = factor termino_1 . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [termino -> factor termino_1] with [None,None] and goto state 109
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = termino . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 143
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 143
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = termino epsilon . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [exp_1 -> epsilon] with [None] and goto state 141
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 141
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = termino exp_1 . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [exp -> termino exp_1] with [None,None] and goto state 108
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = exp . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 136
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 136
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = exp epsilon . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [expression_1 -> epsilon] with [None] and goto state 134
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 134
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = exp expression_1 . LexToken(;,';',16,286)
INFO:root:Action : Reduce rule [expression -> exp expression_1] with [None,None] and goto state 107
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 107
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = expression . LexToken(;,';',16,286)
DEBUG:root:Action : Shift and goto state 133
DEBUG:root:State  : 133
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { id_completo = expression ; . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [assignment -> id_completo = expression ;] with [<tuple @ 0x1f5be2df940>,'=',None,';'] and goto state 64
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 64
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { assignment . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [statement -> assignment] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { statement . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 63
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 63
DEBUG:root:Defaulted state 63: Reduce using 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { statement epsilon . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [bloque_1 -> epsilon] with [None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { statement bloque_1 . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 61
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 61
DEBUG:root:Defaulted state 61: Reduce using 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { bloque_1 . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [bloque -> bloque_1] with [None] and goto state 201
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 201
DEBUG:root:Defaulted state 201: Reduce using 56
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { bloque . LexToken(},'}',17,292)
INFO:root:Action : Reduce rule [condition_1 -> bloque] with [None] and goto state 200
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 200
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { condition_1 . LexToken(},'}',17,292)
DEBUG:root:Action : Shift and goto state 208
DEBUG:root:State  : 208
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { condition_1 } . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 214
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 214
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { condition_1 } epsilon . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [condition_2 -> epsilon] with [None] and goto state 212
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 212
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement IF ( expression ) THEN { condition_1 } condition_2 . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [condition -> IF ( expression ) THEN { condition_1 } condition_2] with ['if','(',None,')','then','{',None,'}',None] and goto state 70
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 70
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement condition . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [statement -> condition] with [None] and goto state 62
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 62
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement statement . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [epsilon -> <empty>] with [] and goto state 63
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 63
DEBUG:root:Defaulted state 63: Reduce using 110
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement statement epsilon . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [bloque_1 -> epsilon] with [None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement statement bloque_1 . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement statement bloque_1 . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 92
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 92
DEBUG:root:Defaulted state 92: Reduce using 109
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { statement bloque_1 . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [bloque_1 -> statement bloque_1] with [None,None] and goto state 61
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 61
DEBUG:root:Defaulted state 61: Reduce using 108
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { bloque_1 . LexToken(},'}',18,294)
INFO:root:Action : Reduce rule [bloque -> bloque_1] with [None] and goto state 60
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 60
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { bloque . LexToken(},'}',18,294)
DEBUG:root:Action : Shift and goto state 91
DEBUG:root:State  : 91
DEBUG:root:Defaulted state 91: Reduce using 52
DEBUG:root:Stack  : PROGRAM ID ; programa_1 MAIN ( ) main_1 { bloque } . None
INFO:root:Action : Reduce rule [main -> MAIN ( ) main_1 { bloque }] with ['main','(',')',None,'{',None,'}'] and goto state 12
INFO:root:Result : <NoneType @ 0x7ffc2a7b5880> (None)
DEBUG:root:State  : 12
DEBUG:root:Defaulted state 12: Reduce using 1
DEBUG:root:Stack  : PROGRAM ID ; programa_1 main . None
INFO:root:Action : Reduce rule [programa -> PROGRAM ID ; programa_1 main] with ['program','donpato',';',None,None] and goto state 1
INFO:root:Result : <str @ 0x1f5bdece730> ('COMPILA')
DEBUG:root:State  : 1
DEBUG:root:Stack  : programa . $end
INFO:root:Done   : Returning <str @ 0x1f5bdece730> ('COMPILA')
INFO:root:PLY: PARSE DEBUG END
